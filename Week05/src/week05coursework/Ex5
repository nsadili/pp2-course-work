Ex_5
1)
package week05coursework;

class Animal {
	public void eat() {
		System.out.println("I can eat.");
	}
}

class Dog extends Animal {
	public void bark() {
		System.out.println("I can bark.");
	}
}

class Main {
	public static void main(String[] args) {
		Dog d = new Dog();
		d.eat();
		d.bark();
	}
}

/*
 * 	
 * Single Inheritance:
 * Single inheritance is a type of inheritance where a class inherits from only one parent class. 
 * In other words, a subclass can have only one direct superclass. This is the most common type of inheritance used in Java.
 * 
 * */

 2)class Animal {
    public void eat() {
        System.out.println("I can eat.");
    }
}

class Dog extends Animal {
    public void bark() {
        System.out.println("I can bark.");
    }
}

class Labrador extends Dog {
    public void color() {
        System.out.println("I am brown in color.");
    }
}

class Main {
    public static void main(String[] args) {
        Labrador l = new Labrador();
        l.eat();
        l.bark();
        l.color();
    }
}
 
 /*
 * 	
 * Multilevel Inheritance:
 * Multilevel inheritance is a type of inheritance where a subclass inherits from a parent class, which in turn inherits from another parent class. 
 * In other words, a subclass can have only one direct superclass, but that superclass can also have a superclass of its own.
 * 
 * */
 
 3)class Animal {
    public void eat() {
        System.out.println("I can eat.");
    }
}

class Dog extends Animal {
    public void bark() {
        System.out.println("I can bark.");
    }
}

class Cat extends Animal {
    public void meow() {
        System.out.println("I can meow.");
    }
}

class Main {
    public static void main(String[] args) {
        Dog d = new Dog();
        Cat c = new Cat();
        d.eat();
        d.bark();
        c.eat();
        c.meow();
    }
}

/*
 * 	
 * Hierarchical Inheritance:
 * Hierarchical inheritance is a type of inheritance where multiple subclasses inherit from a single parent class. 
 * In other words, a superclass has more than one subclass.
 * 
 * 
 */
 
 4)interface A {
    public void methodA();
}

interface B {
    public void methodB();
}

class MyClass implements A, B {
    public void methodA() {
        System.out.println("Method A");
    }
    public void methodB() {
        System.out.println("Method B");
    }
}

class Main {
    public static void main(String[] args) {
        MyClass c = new MyClass();
        c.methodA();
        c.methodB
 	}
 }
 
/*
 *
 * Multiple Inheritance:
 * Multiple inheritance is a type of inheritance where a subclass inherits from more than one parent class. However, Java does not support multiple inheritance directly. Instead, it uses interfaces to achieve the same effect.
 *
 */
 