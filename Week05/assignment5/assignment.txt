Single inheritance: This is when a subclass extends a single parent class. The subclass inherits all of the attributes and methods of the parent class. For example, imagine you have a class called "Animal" and a subclass called "Cat". The "Cat" class can inherit all the attributes and methods from the "Animal" class, such as the "speak()" method that might make a cat meow.

Multilevel inheritance: This occurs when a subclass extends a parent class that itself extends another parent class. The subclass inherits attributes and methods from both the parent and grandparent classes. For example, consider a "Vehicle" class that is extended by a "Car" class, which is in turn extended by a "SportsCar" class. The "SportsCar" class would inherit all attributes and methods from the "Vehicle" and "Car" classes, including things like "accelerate()" and "brake()".

Hierarchical inheritance: This happens when multiple subclasses inherit from the same parent class. Each subclass has its own unique attributes and methods in addition to those inherited from the parent class. For example, you could have a "Shape" class with subclasses such as "Circle" and "Rectangle", each with their own unique methods and attributes, but also inheriting basic properties from the "Shape" class.

Multiple inheritance: This is when a subclass extends multiple parent classes at the same time. The subclass inherits attributes and methods from all parent classes. For example, consider a "Student" class that might inherit attributes and methods from both a "Person" class and a "Scholarship" class.

Hybrid inheritance: This is a combination of any of the above types of inheritance. For example, imagine a "Bicycle" class that is extended by a "MountainBike" class using multilevel inheritance, but then also extended by a "RacingBike" class using single inheritance. The "MountainBike" class would inherit attributes from both the "Bicycle" and "Vehicle" classes, while the "RacingBike" class would only inherit attributes from the "Bicycle" class.